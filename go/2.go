/*
Solution to Project Euler problem 2:
	Each new term in the Fibonacci sequence is generated by adding the
	previous two terms. By starting with 1 and 2, the first 10 terms will be:
	1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
	By considering the terms in the Fibonacci sequence whose values do not
	exceed four million, find the sum of the even value terms. 
*/
package main

import (
	"fmt"
	"time"
)

func main() {
	startTime := time.Now()
	firstTerm := 0
	secondTerm := 1
	nextTerm := 0
	total := 0
	
	for secondTerm < 4000000 {
		if secondTerm % 2 == 0 {total += secondTerm}
		nextTerm = firstTerm + secondTerm
		firstTerm = secondTerm
		secondTerm = nextTerm
	}
	elapsedTime := time.Since(startTime)
	fmt.Printf("Answer: %d\n", total)
	fmt.Printf("Elapsed Time: %s\n", elapsedTime)
}